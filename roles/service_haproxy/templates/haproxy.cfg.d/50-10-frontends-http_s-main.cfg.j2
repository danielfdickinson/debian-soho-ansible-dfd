frontend fe_http_s
	bind 0.0.0.0:443,[::]:443 ssl crt {{ public_cert_full_file }} alpn h2,http/1.1
	bind 0.0.0.0:80,[::]:80

	monitor-uri /haproxy-health

	option forwardfor except 127.0.0.0/8
	option abortonclose

	log-format "%{+Q}o %{-Q}ci %{-Q}[capture.req.hdr(0)] - [%trg] %r %ST %B %[capture.req.hdr(1)] %[capture.req.hdr(2)] %cp %ms %ft %b %s"
	capture request header Host len 64
	capture request header Referer len 256
	capture request header User-Agent len 512

	filter cache main
	filter compression

	# Use General Purpose Counter 0 in SC0 as a global abuse counter
	# protecting all our sites
	stick-table type ip size 2m expire 10m store gpc0
	tcp-request connection track-sc0 src
	tcp-request connection reject if { sc0_get_gpc0 gt 0 }

	acl path_acme path_beg /.well-known/acme-challenge/
	acl path_stats path /server-stats
	acl path_root path /

	acl dom_gate hdr(host) gatekss.kss gatekss.kss.thecshore.ca
	acl dom_gdav hdr(host) gdavkss.kss gdavkss.kss.thecshore.ca
	acl dom_web_nowww hdr(host) -f /etc/haproxy/acl-files/web_nowww.txt
	acl dom_web_www hdr(host) -f /etc/haproxy/acl-files/web_www.txt

	acl path_mal_beg path_beg -f /etc/haproxy/acl-files/mal_beg.txt
	acl path_mal_sub path_sub -f /etc/haproxy/acl-files/mal_sub.txt
	acl path_mal_end path_end -f /etc/haproxy/acl-files/mal_end.txt
	acl path_mal_host_dom hdr(host) -m dom {{ ha_mal_host_doms | join(' ') }}
	acl query_mal_sub query -m sub {{ ha_mal_query_substrings | join(' ') }}

	http-request deny if path_mal_beg || path_mal_sub || path_mal_end || path_mal_host_dom || query_mal_sub
	http-request redirect location "https://www.%[capture.req.hdr(0)]%HP" code 301 if dom_web_www !{ hdr_beg(host) -i www }
	http-request redirect prefix https://gdavkss.kss.thecshore.ca/SOGo code 301 if path_root dom_gdav
	http-request redirect scheme https code 301 if !{ ssl_fc } !path_acme dom_gate
	http-request redirect scheme https code 301 if !{ ssl_fc } !path_acme dom_gdav
	http-request redirect scheme https code 301 drop-query if !{ ssl_fc } !path_acme dom_web_nowww
	http-request redirect scheme https code 301 drop-query if !{ ssl_fc } !path_acme dom_web_www
	http-request redirect location "https://%[capture.req.hdr(0)]%[path]" code 301 if { query -m found } !dom_gate !dom_gdav
	http-request allow if dom_gate || dom_gdav || dom_web_nowww || dom_web_www

	use_backend be_certbot if path_acme HTTP

	use_backend be_webhost if dom_web_nowww || dom_web_www
	use_backend be_sogo if dom_gdav
	use_backend be_server_stats if path_stats dom_gate

	default_backend be_dummy
